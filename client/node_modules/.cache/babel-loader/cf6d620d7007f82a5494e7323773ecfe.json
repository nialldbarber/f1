{"ast":null,"code":"var _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/app.js\";\nimport React from 'react';\nimport { ApolloClient, ApolloLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { onError } from 'apollo-link-error';\nimport Drivers from './components/drivers';\nimport AddDriver from './components/add-driver';\nconst link = onError(({\n  graphQLErrors,\n  networkError\n}) => {\n  if (graphQLErrors) graphQLErrors.map(({\n    message,\n    locations,\n    path\n  }) => console.log(\"[GraphQL error]: Message: \".concat(message, \", Location: \").concat(locations, \", Path: \").concat(path)));\n  if (networkError) console.log(\"[Network error]: \".concat(networkError));\n});\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  link: ApolloLink.from([link])\n});\n\nconst App = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"App App-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"F1 Stats\"), React.createElement(AddDriver, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), React.createElement(Drivers, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})));\n\nexport default App;","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/app.js"],"names":["React","ApolloClient","ApolloLink","ApolloProvider","onError","Drivers","AddDriver","link","graphQLErrors","networkError","map","message","locations","path","console","log","client","uri","from","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,cAAzC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,IAAI,GAAGH,OAAO,CAAC,CAAC;AAAEI,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AACxD,MAAID,aAAJ,EACEA,aAAa,CAACE,GAAd,CAAkB,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,GAAD,KAChBC,OAAO,CAACC,GAAR,qCAC+BJ,OAD/B,yBACqDC,SADrD,qBACyEC,IADzE,EADF;AAKF,MAAIJ,YAAJ,EAAkBK,OAAO,CAACC,GAAR,4BAAgCN,YAAhC;AACnB,CARmB,CAApB;AAUA,MAAMO,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC9BgB,EAAAA,GAAG,iCAD2B;AAE9BV,EAAAA,IAAI,EAAEL,UAAU,CAACgB,IAAX,CAAgB,CAACX,IAAD,CAAhB;AAFwB,CAAjB,CAAf;;AAKA,MAAMY,GAAG,GAAG,MACV,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,CADF;;AAUA,eAAeG,GAAf","sourcesContent":["import React from 'react'\nimport { ApolloClient, ApolloLink } from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { onError } from 'apollo-link-error'\nimport Drivers from './components/drivers'\nimport AddDriver from './components/add-driver'\n\nconst link = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    )\n  if (networkError) console.log(`[Network error]: ${networkError}`)\n})\n\nconst client = new ApolloClient({\n  uri: `http://localhost:4000/graphql`,\n  link: ApolloLink.from([link]),\n})\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <div className=\"App App-header\">\n      <h1>F1 Stats</h1>\n      <AddDriver />\n      <Drivers />\n    </div>\n  </ApolloProvider>\n)\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}