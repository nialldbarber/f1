{"ast":null,"code":"import _slicedToArray from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tmutation AddDriver($name: String, $age: Int, $country: String, $team: String, $racesWon: [String]) {\\n\\t\\taddDriver(name: $name, age: $age, country: $country, team: $team, racesWon: $racesWon) {\\n\\t\\t\\tname\\n\\t\\t\\tage\\n\\t\\t\\tcountry\\n\\t\\t\\tteam\\n\\t\\t\\tracesWon\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nconst SET_DRIVERS = gql(_templateObject());\n\nconst AddDriver = ({\n  name,\n  age\n}) => {\n  let input;\n\n  const _useMutation = useMutation(SET_DRIVERS),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        setDrivers = _useMutation2[0],\n        data = _useMutation2[1].data;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add Driver Here:\"));\n};\n\nexport default AddDriver;\nAddDriver.propTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number\n};","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js"],"names":["React","PropTypes","useMutation","gql","SET_DRIVERS","AddDriver","name","age","input","setDrivers","data","propTypes","string","number"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,WAAW,GAAGD,GAAH,mBAAjB;;AAYA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AACpC,MAAIC,KAAJ;;AADoC,uBAEHN,WAAW,CAACE,WAAD,CAFR;AAAA;AAAA,QAE5BK,UAF4B;AAAA,QAEdC,IAFc,oBAEdA,IAFc;;AAIpC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,CADD;AAKA,CATD;;AAWA,eAAeL,SAAf;AAEAA,SAAS,CAACM,SAAV,GAAsB;AACrBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MADK;AAErBL,EAAAA,GAAG,EAAEN,SAAS,CAACY;AAFM,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nconst SET_DRIVERS = gql`\n\tmutation AddDriver($name: String, $age: Int, $country: String, $team: String, $racesWon: [String]) {\n\t\taddDriver(name: $name, age: $age, country: $country, team: $team, racesWon: $racesWon) {\n\t\t\tname\n\t\t\tage\n\t\t\tcountry\n\t\t\tteam\n\t\t\tracesWon\n\t\t}\n\t}\n`;\n\nconst AddDriver = ({ name, age }) => {\n\tlet input;\n\tconst [ setDrivers, { data } ] = useMutation(SET_DRIVERS);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Add Driver Here:</p>\n\t\t</div>\n\t);\n};\n\nexport default AddDriver;\n\nAddDriver.propTypes = {\n\tname: PropTypes.string,\n\tage: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}