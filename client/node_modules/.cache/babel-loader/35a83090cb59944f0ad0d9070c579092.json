{"ast":null,"code":"import _defineProperty from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components'; // const AddForm = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `\n// const SET_DRIVERS = gql`\n//   mutation addDriver(\n//     $name: String\n//     $age: Int\n//     $country: String\n//     $team: String\n//   ) {\n//     addDriver(name: $name, age: $age, country: $country, team: $team) {\n//       name\n//       age\n//       country\n//       team\n//     }\n//   }\n// `\n\nconst AddDriver = () => {\n  const _useState = useState({\n    name: '',\n    age: '',\n    country: '',\n    team: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        driver = _useState2[0],\n        setDriver = _useState2[1]; // const [addDriver, { error }] = useMutation(SET_DRIVERS, {\n  //   // variables: { name, age, country, team },\n  //   refetchQueries: ['drivers'],\n  // })\n  // if (error) console.log(`Error: ${error}`)\n\n\n  const handleChange = e => {\n    setDriver(_objectSpread({}, driver, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(driver);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleClick = () => {\n    console.log('Clicked');\n    console.log(driver);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Add Driver Here:\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: driver.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Age:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"age\",\n    value: driver.age,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Country:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"country\",\n    value: driver.country,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"team\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Team:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"team\",\n    value: driver.team,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: handleClick,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Click me\")));\n};\n\nexport default AddDriver;","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js"],"names":["React","useState","useMutation","gql","styled","AddDriver","name","age","country","team","driver","setDriver","handleChange","e","target","value","console","log","handleSubmit","preventDefault","handleClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport styled from 'styled-components'\n\n// const AddForm = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `\n\n// const SET_DRIVERS = gql`\n//   mutation addDriver(\n//     $name: String\n//     $age: Int\n//     $country: String\n//     $team: String\n//   ) {\n//     addDriver(name: $name, age: $age, country: $country, team: $team) {\n//       name\n//       age\n//       country\n//       team\n//     }\n//   }\n// `\n\nconst AddDriver = () => {\n  const [driver, setDriver] = useState({\n    name: '',\n    age: '',\n    country: '',\n    team: '',\n  })\n\n  // const [addDriver, { error }] = useMutation(SET_DRIVERS, {\n  //   // variables: { name, age, country, team },\n  //   refetchQueries: ['drivers'],\n  // })\n\n  // if (error) console.log(`Error: ${error}`)\n\n  const handleChange = e => {\n    setDriver({ ...driver, [e.target.name]: e.target.value })\n    console.log(driver)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n  }\n\n  const handleClick = () => {\n    console.log('Clicked')\n    console.log(driver)\n  }\n\n  return (\n    <div>\n      <p>Add Driver Here:</p>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={driver.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"age\">\n          Age:\n          <input\n            type=\"text\"\n            name=\"age\"\n            value={driver.age}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"country\">\n          Country:\n          <input\n            type=\"text\"\n            name=\"country\"\n            value={driver.country}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"team\">\n          Team:\n          <input\n            type=\"text\"\n            name=\"team\"\n            value={driver.team}\n            onChange={handleChange}\n          />\n        </label>\n        <button onClick={handleClick} type=\"button\">\n          Click me\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddDriver\n"]},"metadata":{},"sourceType":"module"}