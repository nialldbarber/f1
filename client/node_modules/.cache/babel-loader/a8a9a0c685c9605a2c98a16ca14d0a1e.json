{"ast":null,"code":"var _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/app.js\";\nimport React from 'react';\nimport { ApolloClient, ApolloLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { onError } from 'apollo-link-error';\nimport Drivers from './components/drivers';\nimport AddDriver from './components/add-driver';\nconst errorLink = onError(({\n  graphQLErrors\n}) => {\n  if (graphQLErrors) graphQLErrors.map(({\n    message\n  }) => console.log(message));\n});\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  link: ApolloLink.from([errorLink])\n});\n\nconst App = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"App App-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"F1 Stats\"), React.createElement(AddDriver, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(Drivers, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})));\n\nexport default App;","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/app.js"],"names":["React","ApolloClient","ApolloLink","ApolloProvider","onError","Drivers","AddDriver","errorLink","graphQLErrors","map","message","console","log","client","uri","link","from","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,cAAzC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,SAAS,GAAGH,OAAO,CAAC,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAuB;AAC/C,MAAIA,aAAJ,EAAmBA,aAAa,CAACC,GAAd,CAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAnC;AACpB,CAFwB,CAAzB;AAIA,MAAMG,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,EAAAA,GAAG,iCAD2B;AAE9BC,EAAAA,IAAI,EAAEb,UAAU,CAACc,IAAX,CAAgB,CAACT,SAAD,CAAhB;AAFwB,CAAjB,CAAf;;AAKA,MAAMU,GAAG,GAAG,MACV,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,CADF;;AAUA,eAAeI,GAAf","sourcesContent":["import React from 'react'\nimport { ApolloClient, ApolloLink } from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { onError } from 'apollo-link-error'\nimport Drivers from './components/drivers'\nimport AddDriver from './components/add-driver'\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n})\n\nconst client = new ApolloClient({\n  uri: `http://localhost:4000/graphql`,\n  link: ApolloLink.from([errorLink]),\n})\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <div className=\"App App-header\">\n      <h1>F1 Stats</h1>\n      <AddDriver />\n      <Drivers />\n    </div>\n  </ApolloProvider>\n)\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}