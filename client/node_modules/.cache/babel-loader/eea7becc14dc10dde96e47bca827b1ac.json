{"ast":null,"code":"import _slicedToArray from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation AddDriver(\\n    $name: String\\n    $age: Int\\n    $country: String\\n    $team: String\\n    $racesWon: [String]\\n  ) {\\n    addDriver(\\n      name: $name\\n      age: $age\\n      country: $country\\n      team: $team\\n      racesWon: $racesWon\\n    ) {\\n      name\\n      age\\n      country\\n      team\\n      racesWon\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nconst SET_DRIVERS = gql(_templateObject());\n\nconst AddDriver = ({\n  name,\n  age\n}) => {\n  let input;\n\n  const _useMutation = useMutation(SET_DRIVERS),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        setDrivers = _useMutation2[0],\n        data = _useMutation2[1].data;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Add Driver Here:\"));\n};\n\nexport default AddDriver;\nAddDriver.propTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number\n};","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js"],"names":["React","PropTypes","useMutation","gql","SET_DRIVERS","AddDriver","name","age","input","setDrivers","data","propTypes","string","number"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,WAAW,GAAGD,GAAH,mBAAjB;;AAwBA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AACnC,MAAIC,KAAJ;;AADmC,uBAEJN,WAAW,CAACE,WAAD,CAFP;AAAA;AAAA,QAE5BK,UAF4B;AAAA,QAEdC,IAFc,oBAEdA,IAFc;;AAInC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD,CATD;;AAWA,eAAeL,SAAf;AAEAA,SAAS,CAACM,SAAV,GAAsB;AACpBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MADI;AAEpBL,EAAAA,GAAG,EAAEN,SAAS,CAACY;AAFK,CAAtB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useMutation } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\n\nconst SET_DRIVERS = gql`\n  mutation AddDriver(\n    $name: String\n    $age: Int\n    $country: String\n    $team: String\n    $racesWon: [String]\n  ) {\n    addDriver(\n      name: $name\n      age: $age\n      country: $country\n      team: $team\n      racesWon: $racesWon\n    ) {\n      name\n      age\n      country\n      team\n      racesWon\n    }\n  }\n`\n\nconst AddDriver = ({ name, age }) => {\n  let input\n  const [setDrivers, { data }] = useMutation(SET_DRIVERS)\n\n  return (\n    <div>\n      <p>Add Driver Here:</p>\n    </div>\n  )\n}\n\nexport default AddDriver\n\nAddDriver.propTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number,\n}\n"]},"metadata":{},"sourceType":"module"}