{"ast":null,"code":"import _defineProperty from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components'; // const AddForm = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `\n// const SET_DRIVERS = gql`\n//   mutation addDriver(\n//     $name: String\n//     $age: Int\n//     $country: String\n//     $team: String\n//   ) {\n//     addDriver(name: $name, age: $age, country: $country, team: $team) {\n//       name\n//       age\n//       country\n//       team\n//     }\n//   }\n// `\n\nconst AddDriver = () => {\n  const _useState = useState({\n    name: '',\n    age: '',\n    country: '',\n    team: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        driver = _useState2[0],\n        setDriver = _useState2[1]; // const [addDriver, { error }] = useMutation(SET_DRIVERS, {\n  //   // variables: { name, age, country, team },\n  //   refetchQueries: ['drivers'],\n  // })\n  // if (error) console.log(`Error: ${error}`)\n\n\n  const handleChange = e => {\n    setDriver(_objectSpread({}, driver, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(driver);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleClick = () => {\n    console.log('Clicked');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Add Driver Here:\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: driver.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Age:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"age\",\n    value: driver.age,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Country:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"country\",\n    value: driver.country,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"team\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Team:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"team\",\n    value: driver.team,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: handleClick,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Click me\")));\n};\n\nexport default AddDriver;","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js"],"names":["React","useState","useMutation","gql","styled","AddDriver","name","age","country","team","driver","setDriver","handleChange","e","target","value","console","log","handleSubmit","preventDefault","handleClick"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACOJ,QAAQ,CAAC;AACtCK,IAAAA,IAAI,EAAE,EADgC;AAEtCC,IAAAA,GAAG,EAAE,EAFiC;AAGtCC,IAAAA,OAAO,EAAE,EAH6B;AAItCC,IAAAA,IAAI,EAAE;AAJgC,GAAD,CADf;AAAA;AAAA,QACfC,MADe;AAAA,QACPC,SADO,kBAQvB;AACA;AACA;AACA;AAEA;;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACG,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAAxC,OAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,GAHD;;AAKA,QAAMQ,YAAY,GAAIL,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACM,cAAF;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACzBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,GAFD;;AAIA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAER,MAAM,CAACJ,IAA7C;AAAmD,IAAA,QAAQ,EAAEM,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAKC;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAA8B,IAAA,KAAK,EAAEF,MAAM,CAACH,GAA5C;AAAiD,IAAA,QAAQ,EAAEK,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CALD,EASC;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,KAAK,EAAEF,MAAM,CAACF,OAAhD;AAAyD,IAAA,QAAQ,EAAEI,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CATD,EAaC;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEF,MAAM,CAACD,IAA7C;AAAmD,IAAA,QAAQ,EAAEG,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAbD,EAiBC;AAAQ,IAAA,OAAO,EAAEQ,WAAjB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBD,CAFD,CADD;AA0BA,CAtDD;;AAwDA,eAAef,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\n\n// const AddForm = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `\n\n// const SET_DRIVERS = gql`\n//   mutation addDriver(\n//     $name: String\n//     $age: Int\n//     $country: String\n//     $team: String\n//   ) {\n//     addDriver(name: $name, age: $age, country: $country, team: $team) {\n//       name\n//       age\n//       country\n//       team\n//     }\n//   }\n// `\n\nconst AddDriver = () => {\n\tconst [ driver, setDriver ] = useState({\n\t\tname: '',\n\t\tage: '',\n\t\tcountry: '',\n\t\tteam: ''\n\t});\n\n\t// const [addDriver, { error }] = useMutation(SET_DRIVERS, {\n\t//   // variables: { name, age, country, team },\n\t//   refetchQueries: ['drivers'],\n\t// })\n\n\t// if (error) console.log(`Error: ${error}`)\n\n\tconst handleChange = (e) => {\n\t\tsetDriver({ ...driver, [e.target.name]: e.target.value });\n\t\tconsole.log(driver);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t};\n\n\tconst handleClick = () => {\n\t\tconsole.log('Clicked');\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Add Driver Here:</p>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label htmlFor=\"name\">\n\t\t\t\t\tName:\n\t\t\t\t\t<input type=\"text\" name=\"name\" value={driver.name} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t\t<label htmlFor=\"age\">\n\t\t\t\t\tAge:\n\t\t\t\t\t<input type=\"text\" name=\"age\" value={driver.age} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t\t<label htmlFor=\"country\">\n\t\t\t\t\tCountry:\n\t\t\t\t\t<input type=\"text\" name=\"country\" value={driver.country} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t\t<label htmlFor=\"team\">\n\t\t\t\t\tTeam:\n\t\t\t\t\t<input type=\"text\" name=\"team\" value={driver.team} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t\t<button onClick={handleClick} type=\"button\">\n\t\t\t\t\tClick me\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default AddDriver;\n"]},"metadata":{},"sourceType":"module"}