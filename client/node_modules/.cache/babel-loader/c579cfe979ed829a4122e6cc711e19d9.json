{"ast":null,"code":"import _defineProperty from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation addDriver(\\n    $name: String\\n    $age: Int\\n    $country: String\\n    $team: String\\n  ) {\\n    addDriver(name: $name, age: $age, country: $country, team: $team) {\\n      name\\n      age\\n      country\\n      team\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nconst AddForm = styled.div(_templateObject());\nconst SET_DRIVERS = gql(_templateObject2());\n\nconst AddDriver = ({\n  name,\n  age,\n  country,\n  team\n}) => {\n  const _useState = useState({\n    name: '',\n    age: '',\n    country: '',\n    team: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        driver = _useState2[0],\n        setDriver = _useState2[1];\n\n  const _useMutation = useMutation(SET_DRIVERS, {\n    variables: {\n      name,\n      age,\n      country,\n      team\n    },\n    refetchQueries: ['drivers']\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addDriver = _useMutation2[0],\n        error = _useMutation2[1].error;\n\n  if (error) console.log(\"Error: \".concat(error));\n\n  const handleChange = e => {\n    setDriver(_objectSpread({}, driver, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Add Driver Here:\"), React.createElement(AddForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: driver.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Age:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"age\",\n    value: driver.age,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Country:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"country\",\n    value: driver.country,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"team\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Team:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"team\",\n    value: driver.team,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: addDriver,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Click me\")));\n};\n\nexport default AddDriver;\nAddDriver.propTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number,\n  country: PropTypes.string,\n  team: PropTypes.string\n};","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js"],"names":["React","useState","PropTypes","useMutation","gql","styled","AddForm","div","SET_DRIVERS","AddDriver","name","age","country","team","driver","setDriver","variables","refetchQueries","addDriver","error","console","log","handleChange","e","target","value","propTypes","string","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;AAKA,MAAMC,WAAW,GAAGJ,GAAH,oBAAjB;;AAgBA,MAAMK,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAkC;AAAA,oBACtBZ,QAAQ,CAAC;AACnCS,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,GAAG,EAAE,EAF8B;AAGnCC,IAAAA,OAAO,EAAE,EAH0B;AAInCC,IAAAA,IAAI,EAAE;AAJ6B,GAAD,CADc;AAAA;AAAA,QAC3CC,MAD2C;AAAA,QACnCC,SADmC;;AAAA,uBAQnBZ,WAAW,CAACK,WAAD,EAAc;AACtDQ,IAAAA,SAAS,EAAE;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,KAD2C;AAEtDI,IAAAA,cAAc,EAAE,CAAC,SAAD;AAFsC,GAAd,CARQ;AAAA;AAAA,QAQ3CC,SAR2C;AAAA,QAQ9BC,KAR8B,oBAQ9BA,KAR8B;;AAalD,MAAIA,KAAJ,EAAWC,OAAO,CAACC,GAAR,kBAAsBF,KAAtB;;AAEX,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBR,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACS,CAAC,CAACC,MAAF,CAASd,IAAV,GAAiBa,CAAC,CAACC,MAAF,CAASC;AAAxC,OAAT;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEX,MAAM,CAACJ,IAHhB;AAIE,IAAA,QAAQ,EAAEY,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,KAAK,EAAER,MAAM,CAACH,GAHhB;AAIE,IAAA,QAAQ,EAAEW,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAmBE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAER,MAAM,CAACF,OAHhB;AAIE,IAAA,QAAQ,EAAEU,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnBF,EA4BE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAER,MAAM,CAACD,IAHhB;AAIE,IAAA,QAAQ,EAAES,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5BF,EAqCE;AAAQ,IAAA,OAAO,EAAEJ,SAAjB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCF,CAFF,CADF;AA8CD,CAjED;;AAmEA,eAAeT,SAAf;AAEAA,SAAS,CAACiB,SAAV,GAAsB;AACpBhB,EAAAA,IAAI,EAAER,SAAS,CAACyB,MADI;AAEpBhB,EAAAA,GAAG,EAAET,SAAS,CAAC0B,MAFK;AAGpBhB,EAAAA,OAAO,EAAEV,SAAS,CAACyB,MAHC;AAIpBd,EAAAA,IAAI,EAAEX,SAAS,CAACyB;AAJI,CAAtB","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useMutation } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport styled from 'styled-components'\n\nconst AddForm = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst SET_DRIVERS = gql`\n  mutation addDriver(\n    $name: String\n    $age: Int\n    $country: String\n    $team: String\n  ) {\n    addDriver(name: $name, age: $age, country: $country, team: $team) {\n      name\n      age\n      country\n      team\n    }\n  }\n`\n\nconst AddDriver = ({ name, age, country, team }) => {\n  const [driver, setDriver] = useState({\n    name: '',\n    age: '',\n    country: '',\n    team: '',\n  })\n\n  const [addDriver, { error }] = useMutation(SET_DRIVERS, {\n    variables: { name, age, country, team },\n    refetchQueries: ['drivers'],\n  })\n\n  if (error) console.log(`Error: ${error}`)\n\n  const handleChange = e => {\n    setDriver({ ...driver, [e.target.name]: e.target.value })\n  }\n\n  return (\n    <div>\n      <p>Add Driver Here:</p>\n      <AddForm>\n        <label htmlFor=\"name\">\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={driver.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"age\">\n          Age:\n          <input\n            type=\"text\"\n            name=\"age\"\n            value={driver.age}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"country\">\n          Country:\n          <input\n            type=\"text\"\n            name=\"country\"\n            value={driver.country}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"team\">\n          Team:\n          <input\n            type=\"text\"\n            name=\"team\"\n            value={driver.team}\n            onChange={handleChange}\n          />\n        </label>\n        <button onClick={addDriver} type=\"button\">\n          Click me\n        </button>\n      </AddForm>\n    </div>\n  )\n}\n\nexport default AddDriver\n\nAddDriver.propTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number,\n  country: PropTypes.string,\n  team: PropTypes.string,\n}\n"]},"metadata":{},"sourceType":"module"}