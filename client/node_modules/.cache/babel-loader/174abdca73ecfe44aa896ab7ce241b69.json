{"ast":null,"code":"import _slicedToArray from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\tmutation addDriver($name: String, $age: Int, $country: String, $team: String) {\\n\\t\\taddDriver(name: $name, age: $age, country: $country, team: $team) {\\n\\t\\t\\tname\\n\\t\\t\\tage\\n\\t\\t\\tcountry\\n\\t\\t\\tteam\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nconst AddForm = styled.div(_templateObject());\nconst SET_DRIVERS = gql(_templateObject2());\n\nconst AddDriver = () => {\n  const _useState = useState([{\n    name: '',\n    age: '',\n    country: '',\n    team: ''\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        driver = _useState2[0],\n        setDriver = _useState2[1];\n\n  const _useMutation = useMutation(SET_DRIVERS, {\n    variables: {\n      name,\n      age,\n      country,\n      team\n    },\n    refetchQueries: ['drivers']\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addDriver = _useMutation2[0],\n        error = _useMutation2[1].error;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add Driver Here:\"), React.createElement(AddForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"hello\")));\n};\n\nexport default AddDriver;","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/add-driver/index.js"],"names":["React","useState","useMutation","gql","styled","AddForm","div","SET_DRIVERS","AddDriver","name","age","country","team","driver","setDriver","variables","refetchQueries","addDriver","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;AAKA,MAAMC,WAAW,GAAGJ,GAAH,oBAAjB;;AAWA,MAAMK,SAAS,GAAG,MAAM;AAAA,oBACOP,QAAQ,CAAC,CACtC;AACCQ,IAAAA,IAAI,EAAE,EADP;AAECC,IAAAA,GAAG,EAAE,EAFN;AAGCC,IAAAA,OAAO,EAAE,EAHV;AAICC,IAAAA,IAAI,EAAE;AAJP,GADsC,CAAD,CADf;AAAA;AAAA,QACfC,MADe;AAAA,QACPC,SADO;;AAAA,uBASUZ,WAAW,CAACK,WAAD,EAAc;AACzDQ,IAAAA,SAAS,EAAE;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,KAD8C;AAEzDI,IAAAA,cAAc,EAAE,CAAE,SAAF;AAFyC,GAAd,CATrB;AAAA;AAAA,QASfC,SATe;AAAA,QASFC,KATE,oBASFA,KATE;;AAcvB,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,CAFD,CADD;AAQA,CAtBD;;AAwBA,eAAeV,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\n\nconst AddForm = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst SET_DRIVERS = gql`\n\tmutation addDriver($name: String, $age: Int, $country: String, $team: String) {\n\t\taddDriver(name: $name, age: $age, country: $country, team: $team) {\n\t\t\tname\n\t\t\tage\n\t\t\tcountry\n\t\t\tteam\n\t\t}\n\t}\n`;\n\nconst AddDriver = () => {\n\tconst [ driver, setDriver ] = useState([\n\t\t{\n\t\t\tname: '',\n\t\t\tage: '',\n\t\t\tcountry: '',\n\t\t\tteam: ''\n\t\t}\n\t]);\n\tconst [ addDriver, { error } ] = useMutation(SET_DRIVERS, {\n\t\tvariables: { name, age, country, team },\n\t\trefetchQueries: [ 'drivers' ]\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Add Driver Here:</p>\n\t\t\t<AddForm>\n\t\t\t\t<p>hello</p>\n\t\t\t</AddForm>\n\t\t</div>\n\t);\n};\n\nexport default AddDriver;\n"]},"metadata":{},"sourceType":"module"}