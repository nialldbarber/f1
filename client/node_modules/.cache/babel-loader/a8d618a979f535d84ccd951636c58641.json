{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/niallbarber/htdocs/react-apps/f1/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/niallbarber/htdocs/react-apps/f1/client/src/components/drivers/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    {\\n      drivers {\\n        name\\n        age\\n        country\\n        team\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Driver from '../driver';\n\nconst Drivers = () => {\n  const _useQuery = useQuery(gql(_templateObject())),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Error \\u2639\\uFE0F\");\n  return React.createElement(\"div\", {\n    className: \"drivers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Drivers\"), data.drivers.map(({\n    name,\n    age,\n    country,\n    team\n  }) => React.createElement(Driver, {\n    name: name,\n    age: age,\n    country: country,\n    team: team,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nexport default Drivers;","map":{"version":3,"sources":["/Users/niallbarber/htdocs/react-apps/f1/client/src/components/drivers/index.js"],"names":["React","useQuery","gql","Driver","Drivers","loading","error","data","drivers","map","name","age","country","team"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACaH,QAAQ,CAACC,GAAD,oBADrB;AAAA,QACZG,OADY,aACZA,OADY;AAAA,QACHC,KADG,aACHA,KADG;AAAA,QACIC,IADJ,aACIA,IADJ;;AAYpB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAEX,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAD,KAChB,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH,IAAd;AAAoB,IAAA,GAAG,EAAEC,GAAzB;AAA8B,IAAA,OAAO,EAAEC,OAAvC;AAAgD,IAAA,IAAI,EAAEC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD,CAvBD;;AAyBA,eAAeT,OAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport Driver from '../driver'\n\nconst Drivers = () => {\n  const { loading, error, data } = useQuery(gql`\n    {\n      drivers {\n        name\n        age\n        country\n        team\n      }\n    }\n  `)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error ☹️</p>\n\n  return (\n    <div className=\"drivers\">\n      <h3>Drivers</h3>\n      {data.drivers.map(({ name, age, country, team }) => (\n        <Driver name={name} age={age} country={country} team={team} />\n      ))}\n    </div>\n  )\n}\n\nexport default Drivers\n"]},"metadata":{},"sourceType":"module"}