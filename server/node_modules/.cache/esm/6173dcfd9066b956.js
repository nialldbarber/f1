let path,fs,express,ApolloServer,resolvers;_906‍.w("path",[["default",["path"],function(v){path=v}]]);_906‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_906‍.w("express",[["default",["express"],function(v){express=v}]]);_906‍.w("apollo-server-express",[["ApolloServer",["ApolloServer"],function(v){ApolloServer=v}]]);_906‍.w("./schema/resolvers",[["resolvers",["resolvers"],function(v){resolvers=v}]]);





const typeDefs = fs.readFileSync('./schema/schema.graphql', 'utf8').toString()

require('./db')

const app = express()

app.use(cors(), bodyParser.json())

const server = new ApolloServer({
  typeDefs,
  resolvers,
})

server.applyMiddleware({ app })

const port = process.env.port || 4000
app.listen(port, () =>
  console.log(
    `🚀  Schema is ready at http://localhost:${port}${server.graphqlPath}`
  )
)
